File Explorer: ranger $mod+e, GTK defualt for other programs
Browser: google-chrome-stable $mod+w
    restore last session $mod+shift+w
    incognito $mod+shift+n
Terminal: Terminator $mod+Return
D-menu wrapper: rofi $mod+d
spotify: spotify $mod+s
mail: thunderbird $mod+m
Task-manager: htop $mod+i
    System-monitor: glances
move workstation: $mod+shift+m
Resize window: $mod+right-click drag
move window: $mod+click drag
find window: $mod+;

find file: sudo find / -name 
find exact word string: grep -rnw '/' -e 'pattern'
find word string: grep -rni '/' -e 'pattern'
find string in pdf: pdfgrep -Hirn 'pattern'
fuzzy finder: fzf

find file cached: locate
    update locate: updatedb

Bash fzf:
    Ctrl+r: history fuzzy finder
    Ctrl+t: file fuzzy finder
    Alt+c: cd fuzzy finder
    Ctrl+u: undo command
    Ctrl+y: paste undone command
    vimmode+v: enter command editor

sh to bash sym link check: file -h /bin/sh
    hard link check: find -L /bin -samefile /bin/sh

editor with last command: fc

symbolic link: ln -s [absolute-path] [link]

scripts path: binary
    don't use (system/package binarys): /usr/bin, /sbin, /bin
    user: ~/bin
        - add this to path
    all users: /usr/local/bin 
    root only: /usr/local/sbin


Enviroment Variables: env

disown process: disown
    disown all: disown -a
        - can exit shell without closing process

ignore hangup/disown: nohup
    run background process send output null: nohup cmd &>/dev/null &

Monitor:
    cli: xrandr
    gui: arandr
    daemon: autorandr

Package Manager: pacman
    Update Packages: pacman -Syu
    Update database: pacman -Syy
        - useful when for package retrieve error
    Search downloaded Packages: pacman -Q
    list all files owned: pacman -Ql
    Search downloaded Packages regex: pacman -Qs
    Search database: pacman -Ss
    Remove + unneed dependecies: pacman -Rs
    Local made package install: pacman -U pkgname-pkgver.pkg.tar.xz
    remove orphan packages: pacman -Rns $(pacman -Qtdq)
    list explicitly downloaded packages: pacman -Qe
    sort installed by size: paste <(pacman -Q | awk '{ print $1; }' | xargs pacman -Qi | grep 'Size' | awk '{ print $4$5; }') <(pacman -Q | awk '{print $1; }') | sort -n | column -t

Local Packages: makepkg
    sync dependencies: makepkg -s
    install package: makepkg --install

downgrade package: downgrade
Aur Package Manager: yaourt
    Update Aur Packages: yaourt -Syua
    no confirmation: yaourt -Syua --noconfirm

Remove Old/tmp Packages: paccache
    dry-run: paccache -d
    clean: paccache -r

PGP import public key: gpg --recv-key [keyid]

sha256 hash: sha256sum
    check hash: sha256sum [file]
        -compare this file to given sha256

zip compression(.zip): zip
    pack: zip -r [name.zip] [files]
    unpack: unzip [zip]

gzip compression(.gz): gzip
    unpack: gzip -d [file] OR gunzip [file]

tar compression(.tar): tar
    pack   .tar.gz (tgz): tar -czvf [name] [files]
    unpack .tar.gz (tgz): tar xvzf [file]
    unpack .tar.bz2 (tbz): tar xvjf [file]
    unpack .tar: tar xvf [file]

7zip compression(.7z): 7z
    unpack .7z: 7z x [package]

Service Manager: systemctl
    Services: systemctl
    Service status: systemctl status [service.service]
    Restart service: systemctl restart [service.service]
    start, stop, enable, disable
Logs: journalctl
    Service logs: journalctl -u [service]
    Service Augment(helpful) logs: journalctl -x
    Service jump to end: journalctl -e
    
reexecute/process command history: fc
    reexecute comman history: fc [first] [last]
        - opens editor

torrents: transmission
FTP: filezilla
cloud: dropbox
    cli:dropbox-cli

vpn: openvpn
    openvpn --config fullpath --auth-user-path fullpath
    sudo killall openvpn
    --script-security 2 --up /etc/openvpn/update-resolv-conf.bash --down /etc/openvpn/update-resolv-conf.bash //disable dns lookup on other servers
    - vm's must be on nat mode to use vpn
    - vpnfailsafe.sh and vpnfailsafe_reset

ssh: ssh
    start ssh server: sudo systemctl start sshd
        server config: /etc/ssh/sshd_config
    copy public key to remote machine: ssh-copy-id user@ip
    - sshd is configured for port 39901
    open app on remote machine: DISPLAY=:0 [cmd]

SSH Keys: ssh-keygen
    remove cached key: ssh-keygen -R ip
    generate key: ssh-keygen
    change key pass: ssh-keygen -p
    copy pub key to server authorized_keys: ssh-copy-id [user]@[ip]
        - only works on password auth servers

trace packets: traceroute
    traceroute host

Network/socket/inter-process packets: netstat,ss
    watch all network packets listing ips and PIDs: sudo watch 'netstat -nap --inet'
        -n to change interval
    see all tcp traffic with processes: sudo ss -tp

Execute command periodically/stream: watch
    watch 'cmd'

VNC / ScreenShare: TigerVNC
    vncviewer ip:port
    

Network/Internet: NetworkManager
    Networking GUI: nm-connection-editor
    Networking CLI: nmcli / nmtui
    manage interface: nmcli dev set [interface] managed yes
    - restart service NetworkManager.service to refresh interfaces

download http files: wget
    get with cookies: wget --load-cookies cookies.txt [url]

public ip: 
    curl ifconfig.me
    wget http://checkip.dyndns.org/ -O - -o /dev/null | cut -d: -f 2 | cut -d\< -f 1
private ip: ip addr show wlp4s0

network interface down/up: ip link set dev interface down|up
Change MAC addr: ip link set dev interface address XX:XX:XX:XX:XX:XX
    - interface has to be down first

vmplayer network settings: vmware-netcfg
    - change vmnet0 interface depending on what configuration
        -ethe0 to use ethernet on vm and wifi on arch

change password: passwd

Serve files:
    python3 -m http.server [port]
    - easy file serve

python enviroment: virtualenv
    create env enviroment: virtualenv [env]
    install env package: env/bin/pip install [package]
    run env python: env/bin/python [program]
    change python run env: source env/bin/activate
        - don't have to type env/bin/python
    revert env change: deactivate

python packages: pip
    install requirements.txt: env/bin/pip install -r requirements.txt

offline api/docset: zeal

repositories: git
    undo add: git reset
    remove file from repo: git rm [file]
    remove only from repo: git rm --cached [file]

bluetooth: bluez
    cli:bluetoothctl
    applet: blueman-applet
    gui: blueman-manager

logitech unifying reciver: ltunify
    pair devices: ltunify pair
    list paired devices: ltunify list

firewall: ufw
    * must use sudo
    show status: ufw status
    delete rule: ufw delete [whole-rule]
    allow port: ufw allow [port/protocol]
    allow port limited to ip: ufw allow from [ip]/[subnet] to any port [port]
    comment rule: ufw [rule] [port] comment [comment]
    allow only ipv4: ufw allow proto tcp to 0.0.0.0/0 port 22
    -For any new service must open port in firewall

Gestures: libinput-gestures-setup

bootloader: grub
    config file: /etc/default/grub
        - /etc/grub.d for startup scripts
    generate grub.cfg: grub-mkconfig -o /boot/grub/grub.cfg
    - default kernel: /etc/default/grub: GRUB_DEFAULT=[kernel-image]

system information: uname
    kernel version: uname -r

load kernel module: kmod
    load module: modprobe [module]
    load by file-name: insmod [filename] [args]
    unload module: modprobe -r [module]
        - also: rmmod [module]
    udev autoload: /etc/modules-load.d/[name].conf
        - module name in file delemited with newline
    list modules: lsmod
    info module: modinfo

ramdisk generator: mkinitcpio
    generate a kernel img: mkinitcpio -c [/etc/mkinitcpio.conf] -g /boot/[NameOfImg.img]

locker: betterlockscreen -l
#locker activator: xss-lock
idle checker: xautolock
Fingerprint unlock: press enter then scan fingerprint
Fingerprint: fprintd

privildges: /etc/Pam.d

i3 bar: i3blocks
    - sys scripts: /usr/lib/i3blocks
    - usr scripts: i3blocks
    - config: .i3blocks.conf
notifications: dunst

battery notifier: cbatticon
Power Management: tlp & powertop --autotune
    - laptop-mode-tools
    list all application power usage and rate: powertop
    tlp status: tlp-stat

Power device information: upower
    All power devices: upower -d

brightness: xbacklight
opacity: compton
screen manager: Xrandr
    gui: ARandr
Background image: feh --bg-scale image.jpg
app dpi scale: GDK_DPI_SCALE=1.5 ./app
scale qt app: export QT_SCALE_FACTOR=2
Window Info: xprop or xwininfo

Default Applications: xdg-mime default "application" "mimetype"
Ranger default applications: /home/sam/.config/ranger/rifle.conf
    C-o or ranger-cd changed path
    C-n new tab
    yp / yn yank path or name

clipboard manager: greenclip

sound/audio server: pamixer
    gui: pavucontrol
videoplayer: vlc

set variable for process: [var]=[value] [process]
    - doesn't set env var

find display number: env | grep DISPLAY

set alias's: alias
    - good for setting app specific dpi
    view alias: alias
    set alias: alias [alias name]="[command]"
        - have to set in .bashrc to make permanent
    remove alias: unalias [alias]

groups: gpasswd, groupadd
    add user: gpasswd -a [user] [group]
    add group: groupadd [group]

absolute path: realpath

show ascii table: man ascii

file system hierarchy: man hier

later execution time: at
    run command later: [command] | at [time]
    - has to have atd daemon running

compare two files: diff

print end of file: tail
    print end of file as it updates: tail -f
        - can also be done with less +F

show process: ps
    every process formated: ps -elf
    find process without grep match: ps -elf | grep [proc] | grep -v grep
        - also `pgrep [proc]` but doesn't work on root processes

kill process by id: kill [id]

put clock in terminal: while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done &

play starwars: telnet towel.blinkenlights.nl

ping server: ping
    audible alarm when server connects: ping -i [time] -a [ip]

directory stack: pushd/popd
    push dir: pushd .
    pop dir: popd

escape alias: \[command]

netcat: nc
    pipe command to ip: [command] | nc [ip] [port]
    listen on port: nc -l -p 8000

find duplicate files in cwd: find -not -empty -type f -printf "%s\n" | sort -rn | uniq -d | xargs -I{} -n1 find -type f -size {}c -print0 | xargs -0 md5sum | sort | uniq -w32 --all-repeated=separate

check installed distro: cat /etc/issue

ide: vim
documents: libreoffice
pdfs: masterpdfeditor5 / libreoffice
combine pdf: unitepdf
    unitepdf pdf1 pdf2 pdf.out

convert slides pdf: libreoffice --headless --invisible --convert-to pdf *.pptx 

printer: cups
    webpage when printer is plugged in: localhost:631
    gui: system-config-printer

image editor: gimp

qr code generator/decoder: qtqr

screenshots: scrot
    copy-to-clipboard: scrotclip

partition/format: fdisk,gdisk
    pseudo-graphics: cfdisk,cgdisk
    gui: gparted
format partition: mkfs
    mkfs.[type] -n [name] -I /dev/[name]
clean partition:
    shred /dev/[name]
Hardware/Device Info: hwinfo --short
Device ID: xinput -list

dbus gui: d-feet

keyboard key code: 
    display x inputs: xev
    display keycodes: sudo showkey
    list all keycodes with inputs:  xmodmap -pke

keyboard rate: kbdrate, xset
    set rate/delay: xset r rate [delay] [rate]
    set rate/delay: kbdrate -d [delay] -r [rate]
    - kbdrate for tty, xset for xorg
    - possible kernel option: atkbd.softrepeat=1

setxkbmap names: /usr/share/X11/xkb/rules/evdev.lst

graphical app sudo: gksudo
    *** Dangerous if run on graphical apps ***

List storage disks/devices: fdisk -l

Drive health information: smart
    print info: smartctl -a [/dev/sda]

memory / ram usage: free -m

storage usage: du
    all devs: du
    root dev: du /
    gigabytes: du -BG /

storage free: df
    all devs: df
    root dev: df /
    gigabytes: df -BG /

Check/Repair file systems: fsck
    check on next reboot: touch /forcefsck

usb automounter: udisk2
usb automounter tray: udiskie
usb bootable flasher: sudo etcher-electron, dd if="iso-path" of="/dev/partition"
list partitions: lsblk

man page command: Alt+h

Font: Hack
color scheme: gruvbox
gaps: i3-gaps
-no borders

-.xinitrc initalizes startx
